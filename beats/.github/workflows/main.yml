
name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:

  ci:
    runs-on: ubuntu-latest
    
    steps:
    - name: ‚¨áÔ∏è Checkout do C√≥digo
      uses: actions/checkout@v4

    - name: üêç Configurar Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'

    - name: ‚öôÔ∏è Instalar Depend√™ncias
      run: |
        python -m pip install --upgrade pip
        # Assumindo que voc√™ tem um arquivo requirements.txt
        pip install -r requirements.txt 
        # Instalar django, pillow, etc. se n√£o estiverem no requirements.txt

    - name: ‚úÖ Rodar Testes do Django
      # Voc√™ precisar√° ter testes em beats/playlist/tests.py
      run: python manage.py test
      env:
        # Usar vari√°veis de ambiente para a chave secreta
        SECRET_KEY: ${{ secrets.SECRET_KEY }} 
        DEBUG: "False"

  # ==================================
  # 2. CD (ENTREGA CONT√çNUA/DEPLOY)
  # ==================================
  deploy:
    # S√≥ executa se a etapa 'ci' for bem-sucedida
    needs: ci
    runs-on: ubuntu-latest
    
    # S√≥ executa para pushes no branch principal
    if: github.ref == 'refs/heads/main'
    
    steps:
      - name: ‚¨áÔ∏è Checkout do C√≥digo
        uses: actions/checkout@v4
      
      # ----------------------------------------------------
      # Exemplo de Deploy 1: SSH (Servidor Privado)
      # ----------------------------------------------------
      - name: üöÄ Deploy via SSH (Recomendado para VPS)
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}              # IP do seu servidor
          username: ${{ secrets.SSH_USERNAME }}      # Usu√°rio SSH (ex: ubuntu)
          key: ${{ secrets.SSH_PRIVATE_KEY }}        # Chave SSH privada
          script: |
            # Comandos de deploy no seu servidor remoto
            cd /caminho/do/seu/projeto/no/servidor
            git pull origin main
            source venv/bin/activate
            pip install -r requirements.txt
            python manage.py collectstatic --noinput
            python manage.py migrate
            sudo systemctl restart gunicorn # Reinicia o servidor de produ√ß√£o (ex: Gunicorn/uWSGI)
